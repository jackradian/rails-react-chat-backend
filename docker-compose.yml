version: "3.8"

x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    args:
      RUBY_VERSION: "2.7.1"
      NODE_MAJOR: "16"
      YARN_VERSION: "1.22.17"
  image: rails-react-chat-backend:1.0
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
  tmpfs:
    - /tmp
    - /app/tmp/pids

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - bundle:/usr/local/bundle
    - rails_cache:/app/tmp/cache
    - node_modules:/app/node_modules
    - history:/usr/local/hist
    - ./.dockerdev/.bashrc:/root/.bashrc:ro
  environment: &backend_environment
    <<: *env
    RUBYOPT: "-W:no-deprecated"
    FRONTEND_URL: "http://localhost:3001"
    APP_SESSION_KEY: "_rails_react_chat_session"
    REDIS_URL: redis://redis:6379/
    DATABASE_HOST: db
    DATABASE_USERNAME: root
    DATABASE_PASSWORD: password
    MALLOC_ARENA_MAX: 2
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    XDG_DATA_HOME: /app/tmp/cache
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
    HISTFILE: /usr/local/hist/.bash_history
    IRB_HISTFILE: /usr/local/hist/.irb_history
    EDITOR: vi
  depends_on: &backend_depends_on
    - db
    - redis

services:
  runner:
    <<: *backend
    command: /bin/bash

  api:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - "3000:3000"
    depends_on:
      sidekiq:
        condition: service_started

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq

  db:
    image: mysql:8.0
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--log_bin_trust_function_creators=1"
    volumes:
      - mysql:/var/lib/mysql
      - history:/user/local/hist
    environment:
      MYSQL_ROOT_PASSWORD: password
      TZ: Asia/Tokyo
    ports:
      - "3307:3306"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "while ! /usr/bin/mysqladmin ping -hlocalhost --silent; do echo '.'; done",
        ]
      interval: 10s
      timeout: 10s

  redis:
    image: redis:7.0.5-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  bundle:
  node_modules:
  history:
  rails_cache:
  mysql:
  redis:
